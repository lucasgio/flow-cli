name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        dart-version: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: ${{ matrix.dart-version }}
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
    
    - name: Analyze project source
      run: dart analyze --fatal-infos
    
    - name: Run tests
      run: dart test
    
    - name: Compile executable
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          dart compile exe bin/main.dart -o flow_cli.exe
        else
          dart compile exe bin/main.dart -o flow_cli
        fi
      shell: bash

    - name: Test executable
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          ./flow_cli.exe --help
        else
          ./flow_cli --help
        fi
      shell: bash

  build-linux:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: stable
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Build Linux executable
      run: dart compile exe bin/main.dart -o flow_cli_linux
      shell: bash
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: flow_cli_linux
        path: flow_cli_linux

  build-macos:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: stable
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Build macOS executable
      run: dart compile exe bin/main.dart -o flow_cli_macos
      shell: bash
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: flow_cli_macos
        path: flow_cli_macos

  build-windows:
    needs: test
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: stable
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Build Windows executable
      run: dart compile exe bin/main.dart -o flow_cli_windows.exe
      shell: bash
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: flow_cli_windows
        path: flow_cli_windows.exe

  download-artifacts:
    needs: [test, build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: flow_cli_linux
        path: ./artifacts
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: flow_cli_macos
        path: ./artifacts
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: flow_cli_windows
        path: ./artifacts
    
    - name: List artifacts
      run: |
        echo "âœ… Build completed successfully!"
        echo "ðŸ“¦ Built executables:"
        ls -la ./artifacts/
        echo ""
        echo "ðŸŽ‰ All platforms built successfully!"
        echo "ðŸ“‹ Next steps:"
        echo "   - Test the executables"
        echo "   - Create a release to publish to pub.dev"
        echo "   - Or use the Manual Publish workflow" 